{"version":3,"file":"static/js/736.267de6f4.chunk.js","mappings":"uQAEaA,EAAcC,EAAAA,GAAAA,IAAH,uDAKXC,EAAQD,EAAAA,GAAAA,IAAH,oIASLE,EAAUF,EAAAA,GAAAA,GAAH,wHAOPG,EAASH,EAAAA,GAAAA,GAAH,yC,SCjBJ,SAASI,IACpB,IAAOC,GAAWC,EAAAA,EAAAA,MAAXD,QAER,GAAuBE,EAAAA,EAAAA,UAAS,MAAhC,eAAKC,EAAL,KAAYC,EAAZ,KAoBC,OAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,+GAEQC,MAAM,sCAAD,OAAuCP,EAAvC,4BAPvB,mCAOuB,mBAFb,cAERQ,EAFQ,gBAGKA,EAAQC,OAHb,cAGRC,EAHQ,yBAIPN,EAAQM,EAAKC,OAJN,kCAMdC,QAAQC,IAAI,yDACZD,QAAQC,IAAI,KAAMC,SAPJ,0DAAH,qDAUfR,GACH,GAAE,CAACN,IAEAG,EAIgB,IAAjBA,EAAMY,QACE,oEAGJ,0BACH,SAAClB,EAAD,UACCM,EAAMa,KAAI,YAAsC,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,aAC1B,OAAO,UAACrB,EAAD,YACL,yCAAiBmB,MACjB,mCAAWC,MACX,SAACxB,EAAD,WACA,SAACE,EAAD,CAAOwB,IAAKF,EAAMG,IAAKF,GAAY,UAhC1B,+BAgC0B,OA/B1B,YA+B0B,OAAiCA,SAJlDD,EAOvB,QAjBM,IAoBd,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const LayoutImage = styled.div`\nwidth: 140px;\nheight: 200px;\n`\n\nexport const Image = styled.img`\nobject-fit: cover;\nmax-width: 100%;\ndisplay: block;\nheight: 200px;\nwidth: 140px;\nborder-radius: 10px;\n`\n\nexport const CastBox = styled.ul`\ndisplay: flex;\njustify-content: center;\nflex-wrap: wrap;\ngap: 30px;\nalign-items: baseline;\n`\nexport const LiCast = styled.li`\nwidth: 140px;\n\n`\n\n\n","import PropTypes from 'prop-types'\n\nimport {useParams} from 'react-router-dom'\nimport { useState, useEffect} from \"react\";\nimport {LayoutImage, Image, CastBox, LiCast} from './Cast.styled'\n\nexport default function Cast() {\n    const {movieId} = useParams()\n\n   let [casts, setCast] = useState(null)\n\n    const KEY = '3ec430a354e7116e3d9f9a41b82b2275'\n    const pathPoster = 'https://image.tmdb.org/t/p/'\n    const sizePoster = 'original'\n\n    useEffect(() => {\n        const fetchCast = async () => {\n         try{\n            const dataApi = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-U`)\n            const data = await dataApi.json()\n            return setCast(data.cast)\n         }catch(error) {\n            console.log(\"Ошибка в fetchCast\");\n            console.log(error.message);\n         }\n        }\n        fetchCast()\n    }, [movieId])\n\n    if(!casts){\n        return null\n    }\n\n    if(casts.length === 0){\n        return <h3>We don't have any cast for this movie.</h3>\n    }\n\n    return <div>\n        <CastBox>\n        {casts.map(({character, name, profile_path}) => {\n            return <LiCast key={name}>\n              <h3>Character - {character}</h3>\n              <p>Name - {name}</p>\n              <LayoutImage>\n              <Image alt={name} src={profile_path && `${pathPoster}${sizePoster}${profile_path}`} />\n              </LayoutImage>\n            </LiCast>\n        })}\n        </CastBox>\n    </div>\n}\n\n\nCast.propTypes = {\n    state: PropTypes.object.isRequired\n}"],"names":["LayoutImage","styled","Image","CastBox","LiCast","Cast","movieId","useParams","useState","casts","setCast","useEffect","fetchCast","fetch","dataApi","json","data","cast","console","log","message","length","map","character","name","profile_path","alt","src"],"sourceRoot":""}